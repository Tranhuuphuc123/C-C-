****************************ĐỆ QUY TRONG C++************************************
>>>> KHÁI NIỆM:
 - Trog lập trình một hàm được gọi là đệ quy nếu bên trong thân hàm có một lời gọi đến chính nó.
  - Hàm đệ quy luôn có điều kiện dừng được gọi là "điểm neo". Khi đạt tới điểm neo hàm sẽ không
  gọi chính nó nữa.

      vd:
            void print_value(int a){
            cout<<"bien a: "<<a<<endl;

              // điểm neo
              if(a == 1){
                  return 1; // return 1 tức in ra giá trị cúi này và kết thức funtion luôn
              }

              // đệ quy gọi lại chính nó
              print_value(a -1);
            }


            int main(){
              print_value(3);
              return 0;
            }
             --> kw: a: 3
                     a: 2
                     a: 1
               ---> đệ quy là gọi lại chính hàm đó trong thân hàm của mình có đk là một điểm neo(điều kiện dừng)
               ---> truyền vào 3-> in ra 3 -> xet đk 3!=1-> tiếp tục gọi lại print_value(3-1)-> int ra đc 2
               tiếp tục cho đến khi 1  == 1 thỏa điều kiện thì return 1 tức in ra a: 1  thỏa đk nên dừng tác vụ.
               ---> Lưu ý: Đệ quy thg truyền một tham số, kích thước ban đầu, sau mỗi lần gọi đệ quy thì kích 
               thước đó giảm dần cho đến điều kiện dừng là 1 điểm neo thì end. nếu không nó sẽ lặp vô hạn.

               
>>>> Bài thực hành đệ quy:
  - Đệ quy với vòng lặp:
     
            #include<iostream>
            using namespace std;

            // xây dựng method tinhtong tên là Sum
            int Sum(int n){
              // tạo điểm neo đk dừng đệ quy
              if(n  == 1){
                return 1;
              }

              // lưu ý n  là biến cố định mõi lần thay đổi thì n sẽ đc gán cho Sum(n-1)
              return n + Sum(n-1);
            }

            int main(){
              int n;
              cout<<"nhap n: "<<endl;
              cin>>n;

              cout<<"=======Sum==========="<<endl;
              cout<<"Sum = ";
              for(int  i =1;i<=n;i++){
                cout<<i;
                if(i<=n-1){
                  cout<<" + ";
                }  
              } 
              cout<<" = "<<Sum(n);


              return 0;
            }

            /*
             kw: 
                + Truyền vào 3 so đk 3!=1
                + thực hiện 3 + (3-1) ~ 3 +2
                + tiếp tục n = 2 so đk 2!=1
                + thục hiện 3 + 2 + (2-1) ~ 3 + 2 + 1;
                + n = 1 so đk 1 == 1-> return 1 tức true hết đk so kết thúc lặp
                --> in ra kết quả: sum = 3 + 2 + 1
            */  
          
